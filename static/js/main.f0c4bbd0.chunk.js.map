{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ForceData","obj","undefined","force","this","id","module","angle","posX","posY","fx","fy","moment","info","x0","x","y","y0","distance","d","Math","cos","PI","sin","abs","Force","props","handleChange","event","target","name","value","Calcul","update","handleClick","remove","clone","Card","border","style","maxWidth","minWidth","Header","InputGroup","className","Prepend","Text","FormControl","type","aria-label","aria-describedby","onChange","readOnly","Body","Form","Group","Label","parseFloat","toPrecision","display","Row","Col","Button","variant","onClick","Footer","App","useState","forces","setForces","furthest","setFurthest","setMoment","momentInitial","setMomentInitial","resultante","setResultante","UpdateForce","best","forEach","item","canvasSize","tmpMoment","tmpResultante","atan2","sqrt","RemoveForce","itemToRemove","filter","CloneForce","itemToClone","useEffect","setup","p5","parentRef","createCanvas","parent","draw","Rebase","pos","strokeWeight","background","line","point","isNaN","base","vec","size","color","normalized","createVector","normalize","mult","push","stroke","fill","translate","rotate","heading","arrowSize","mag","triangle","pop","textSize","text","drawArrow","length","CardDeck","margin","overflow","map","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0c4bbd0.chunk.js","sourcesContent":["import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport { useState, useEffect } from \"react\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Sketch from \"react-p5\";\n\nclass ForceData {\n  constructor(obj) {\n    if (obj.force === undefined) {\n      this.id = obj.id;\n      this.module = 0;\n      this.angle = 0;\n      this.posX = 0;\n      this.posY = 0;\n      this.fx = 0;\n      this.fy = 0;\n      this.moment = 0;\n      this.info = { x0: { x: 0, y: 0 }, y0: { x: 0, y: 0 } };\n      this.distance = 0;\n    } else {\n      this.id = obj.force.id;\n      this.module = obj.force.module;\n      this.angle = obj.force.angle;\n      this.posX = obj.force.posX;\n      this.posY = obj.force.posY;\n      this.fx = obj.force.fx;\n      this.fy = obj.force.fy;\n      this.moment = obj.force.moment;\n      this.info = {\n        x0: { x: obj.force.info.x0.x, y: obj.force.info.x0.y },\n        y0: { x: obj.force.info.y0.x, y: obj.force.info.y0.y },\n      };\n      this.distance = obj.force.d;\n    }\n  }\n\n  Calcul() {\n    if (this.angle % 90 === 0 && this.angle % 180 !== 0) this.fx = 0;\n    else this.fx = this.module * Math.cos(this.angle * (Math.PI / 180));\n    if (this.angle % 180 === 0) this.fy = 0;\n    else this.fy = this.module * Math.sin(this.angle * (Math.PI / 180));\n    this.moment = 0;\n    if ((this.fx > 0 && this.posY < 0) || (this.fx < 0 && this.posY > 0))\n      this.moment += Math.abs(this.fx * this.posY);\n    else this.moment -= Math.abs(this.fx * this.posY);\n    if ((this.fy > 0 && this.posX > 0) || (this.fy < 0 && this.posX < 0))\n      this.moment += Math.abs(this.fy * this.posX);\n    else this.moment -= Math.abs(this.fy * this.posX);\n  }\n}\n\nfunction Force(props) {\n  function handleChange(event) {\n    switch (event.target.name) {\n      case \"module\":\n        props.force.module = event.target.value;\n        break;\n      case \"angle\":\n        props.force.angle = event.target.value;\n        break;\n      case \"posX\":\n        props.force.posX = event.target.value;\n        break;\n      case \"posY\":\n        props.force.posY = event.target.value;\n        break;\n      case \"id\":\n        props.force.id = event.target.value;\n        break;\n      default:\n        return;\n    }\n    props.force.Calcul();\n    props.update();\n  }\n\n  function handleClick(event) {\n    switch (event.target.name) {\n      case \"delete\":\n        props.remove(props.force);\n        break;\n      case \"clone\":\n        props.clone(props.force);\n        break;\n      default:\n        return;\n    }\n  }\n\n  return (\n    <Card border=\"primary\" style={{ maxWidth: \"18rem\", minWidth: \"18rem\" }}>\n      <Card.Header>\n        <InputGroup className=\"col-12 mx-auto\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Nom</InputGroup.Text>\n            <FormControl\n              type=\"text\"\n              name=\"id\"\n              aria-label=\"Large\"\n              aria-describedby=\"inputGroup-sizing-sm\"\n              value={props.force.id}\n              onChange={handleChange}\n              readOnly={props.readOnly}\n            />\n          </InputGroup.Prepend>\n        </InputGroup>\n      </Card.Header>\n      <Card.Body>\n        <Form>\n          <Form.Group>\n            <Form.Label>Module</Form.Label>\n            <FormControl\n              type=\"text\"\n              name=\"module\"\n              aria-label=\"Large\"\n              aria-describedby=\"inputGroup-sizing-sm\"\n              value={\n                props.readOnly\n                  ? parseFloat(props.force.module).toPrecision(4)\n                  : props.force.module\n              }\n              onChange={handleChange}\n              readOnly={props.readOnly}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Angle</Form.Label>\n            <FormControl\n              type=\"text\"\n              name=\"angle\"\n              aria-label=\"Large\"\n              aria-describedby=\"inputGroup-sizing-sm\"\n              value={\n                props.readOnly\n                  ? parseFloat(props.force.angle).toPrecision(4)\n                  : props.force.angle\n              }\n              onChange={handleChange}\n              readOnly={props.readOnly}\n            />\n          </Form.Group>\n\n          <Form.Group style={{ display: props.readOnly ? \"\" : \"none\" }}>\n            <Form.Label>Distance</Form.Label>\n            <FormControl\n              type=\"text\"\n              name=\"distance\"\n              aria-label=\"Large\"\n              aria-describedby=\"inputGroup-sizing-sm\"\n              value={\n                props.readOnly\n                  ? Math.abs(parseFloat(props.force.distance).toPrecision(4))\n                  : props.force.distance\n              }\n              readOnly={props.readOnly}\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group style={{ display: props.readOnly ? \"none\" : \"\" }}>\n            <Form.Label>Position</Form.Label>\n            <Form.Row>\n              <Col>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>X</InputGroup.Text>\n                    <FormControl\n                      type=\"text\"\n                      name=\"posX\"\n                      aria-label=\"Large\"\n                      aria-describedby=\"inputGroup-sizing-sm\"\n                      value={\n                        props.readOnly\n                          ? parseFloat(props.force.posX).toPrecision(4)\n                          : props.force.posX\n                      }\n                      onChange={handleChange}\n                      readOnly={props.readOnly}\n                    />\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n              <Col>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Y</InputGroup.Text>\n                    <FormControl\n                      type=\"text\"\n                      name=\"posY\"\n                      aria-label=\"Large\"\n                      aria-describedby=\"inputGroup-sizing-sm\"\n                      value={\n                        props.readOnly\n                          ? parseFloat(props.force.posY).toPrecision(4)\n                          : props.force.posY\n                      }\n                      onChange={handleChange}\n                      readOnly={props.readOnly}\n                    />\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n            </Form.Row>\n          </Form.Group>\n          <Form.Group style={{ display: props.readOnly ? \"\" : \"none\" }}>\n            <Form.Label>Position pour X=0</Form.Label>\n            <Form.Row>\n              <Col>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>X</InputGroup.Text>\n                    <FormControl\n                      type=\"text\"\n                      name=\"x0x\"\n                      aria-label=\"Large\"\n                      aria-describedby=\"inputGroup-sizing-sm\"\n                      value={parseFloat(props.force.info.x0.x).toPrecision(4)}\n                      readOnly={props.readOnly}\n                      onChange={handleChange}\n                    />\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n              <Col>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Y</InputGroup.Text>\n                    <FormControl\n                      type=\"text\"\n                      name=\"x0y\"\n                      aria-label=\"Large\"\n                      aria-describedby=\"inputGroup-sizing-sm\"\n                      value={parseFloat(props.force.info.x0.y).toPrecision(4)}\n                      readOnly={props.readOnly}\n                      onChange={handleChange}\n                    />\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n            </Form.Row>\n          </Form.Group>\n          <Form.Group style={{ display: props.readOnly ? \"\" : \"none\" }}>\n            <Form.Label>Position pour Y=0</Form.Label>\n            <Form.Row>\n              <Col>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>X</InputGroup.Text>\n                    <FormControl\n                      type=\"text\"\n                      name=\"y0x\"\n                      aria-label=\"Large\"\n                      aria-describedby=\"inputGroup-sizing-sm\"\n                      value={parseFloat(props.force.info.y0.x).toPrecision(4)}\n                      readOnly={props.readOnly}\n                      onChange={handleChange}\n                    />\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n              <Col>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Y</InputGroup.Text>\n                    <FormControl\n                      type=\"text\"\n                      name=\"y0y\"\n                      aria-label=\"Large\"\n                      aria-describedby=\"inputGroup-sizing-sm\"\n                      value={parseFloat(props.force.info.y0.y).toPrecision(4)}\n                      readOnly={props.readOnly}\n                      onChange={handleChange}\n                    />\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n            </Form.Row>\n          </Form.Group>\n          <Button\n            style={{ display: props.readOnly ? \"none\" : \"\" }}\n            className=\"mr-3\"\n            name=\"clone\"\n            variant=\"info\"\n            onClick={handleClick}\n            readOnly={props.readOnly}\n          >\n            Dupliquer\n          </Button>\n          <Button\n            style={{ display: props.readOnly ? \"none\" : \"\" }}\n            name=\"delete\"\n            variant=\"danger\"\n            onClick={handleClick}\n          >\n            Effacer\n          </Button>\n        </Form>\n      </Card.Body>\n      <Card.Footer>\n        <Form.Group>\n          <Form.Label>Force (Composantes)</Form.Label>\n          <Form.Row>\n            <Col>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>X</InputGroup.Text>\n                  <FormControl\n                    type=\"text\"\n                    name=\"fx\"\n                    aria-label=\"Large\"\n                    aria-describedby=\"inputGroup-sizing-sm\"\n                    value={props.force.fx.toPrecision(4)}\n                    readOnly\n                    onChange={handleChange}\n                  />\n                </InputGroup.Prepend>\n              </InputGroup>\n            </Col>\n            <Col>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Y</InputGroup.Text>\n                  <FormControl\n                    type=\"text\"\n                    name=\"fy\"\n                    aria-label=\"Large\"\n                    aria-describedby=\"inputGroup-sizing-sm\"\n                    value={props.force.fy.toPrecision(4)}\n                    readOnly\n                    onChange={handleChange}\n                  />\n                </InputGroup.Prepend>\n              </InputGroup>\n            </Col>\n          </Form.Row>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Moment de force</Form.Label>\n          <FormControl\n            type=\"text\"\n            name=\"moment\"\n            aria-label=\"Large\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n            value={props.force.moment.toPrecision(4)}\n            readOnly\n            onChange={handleChange}\n          />\n        </Form.Group>\n      </Card.Footer>\n    </Card>\n  );\n}\n/*\nfunction Moment(props) {\n  function handleChange(event) {\n    switch (event.target.name) {\n      case \"moment\":\n        props.moment.value = event.target.value;\n        break;\n      default:\n        return;\n    }\n    props.update();\n  }\n\n  function handleClick(event) {\n    switch (event.target.name) {\n      case \"delete\":\n        props.remove(props.moment);\n        break;\n      default:\n        return;\n    }\n  }\n\n  return (\n    <Card border=\"primary\" style={{ maxWidth: \"18rem\", minWidth: \"18rem\" }}>\n      <Card.Body>\n        <Form>\n          <Form.Group>\n            <Form.Label>Moment de force</Form.Label>\n            <FormControl\n              name=\"moment\"\n              aria-label=\"Large\"\n              aria-describedby=\"inputGroup-sizing-sm\"\n              value={props.moment.value}\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button name=\"delete\" variant=\"danger\" onClick={handleClick}>\n            Effacer\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}*/\n\nfunction App() {\n  const [forces, setForces] = useState([]);\n  //const [moments, setMoments] = useState([]);\n  const [furthest, setFurthest] = useState(0);\n  const [moment, setMoment] = useState(0);\n  const [momentInitial, setMomentInitial] = useState(0);\n  const [resultante, setResultante] = useState(\n    new ForceData({ id: \"Force Résultante\" })\n  );\n\n  const UpdateForce = () => {\n    setForces([...forces]);\n    let best = 0;\n    forces.forEach((item) => {\n      if (Math.abs(parseFloat(item.posX)) > best)\n        best = Math.abs(parseFloat(item.posX));\n      if (Math.abs(parseFloat(item.posY)) > best)\n        best = Math.abs(parseFloat(item.posY));\n    });\n    best = Math.abs(best);\n    if (best === 0) setFurthest(canvasSize.x + canvasSize.x / 3.0);\n    else setFurthest(best * 2 + best / 2.0);\n\n    let tmpMoment = parseFloat(momentInitial);\n    let tmpResultante = new ForceData({ id: \"Force Résultante\" });\n    forces.forEach((item) => {\n      tmpMoment += item.moment;\n      tmpResultante.fx += item.fx;\n      tmpResultante.fy += item.fy;\n    });\n    tmpResultante.angle = (\n      (Math.atan2(tmpResultante.fy, tmpResultante.fx) * 180) /\n      Math.PI\n    ).toPrecision(4);\n    tmpResultante.module = Math.sqrt(\n      (\n        tmpResultante.fx * tmpResultante.fx +\n        tmpResultante.fy * tmpResultante.fy\n      ).toPrecision(4)\n    );\n    tmpResultante.info = {\n      x0: { x: 0, y: tmpMoment / -tmpResultante.fx },\n      y0: { x: tmpMoment / tmpResultante.fy, y: 0 },\n    };\n    tmpResultante.distance = tmpMoment / parseFloat(tmpResultante.module);\n    tmpResultante.moment = tmpMoment;\n    setResultante(tmpResultante);\n    setMoment(tmpMoment.toPrecision(4));\n  };\n\n  const AddForce = () => {\n    setForces([...forces, new ForceData({ id: forces.length })]);\n  };\n\n  const RemoveForce = (itemToRemove) => {\n    setForces([...forces].filter((item) => item !== itemToRemove));\n  };\n\n  const CloneForce = (itemToClone) => {\n    setForces([...forces, new ForceData({ force: itemToClone })]);\n  };\n\n  useEffect(() => UpdateForce(), [momentInitial]);\n\n  /*\n  const UpdateMoment = () => {\n    setMoments([...moments]);\n  };\n\n  const AddMoment = () => {\n    setMoments([...moments, { value: 0 }]);\n  };\n\n  const RemoveMoment = (itemToRemove) => {\n    setMoments([...moments].filter((item) => item !== itemToRemove));\n  };*/\n\n  function HandleChangeMoment(event) {\n    setMomentInitial(event.target.value);\n  }\n\n  const canvasSize = { x: 750, y: 750 };\n  const setup = (p5, parentRef) => {\n    p5.createCanvas(canvasSize.x, canvasSize.y).parent(parentRef);\n  };\n  const draw = (p5) => {\n    function Rebase(pos) {\n      return (pos * parseFloat(canvasSize.x)) / parseFloat(furthest);\n    }\n\n    function drawArrow(base, vec, id, size = 1, color = 0) {\n      let normalized = p5.createVector(vec.x, vec.y).normalize().mult(50);\n      p5.push();\n      p5.stroke(color);\n      p5.fill(color);\n      p5.strokeWeight(3 * size);\n      p5.fill(0);\n      p5.translate(Rebase(parseFloat(base.x)), Rebase(parseFloat(base.y)));\n      p5.line(0, 0, normalized.x, normalized.y);\n      p5.rotate(normalized.heading());\n      let arrowSize = 5 * size;\n      p5.translate(normalized.mag() - arrowSize, 0);\n      p5.triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n      p5.pop();\n      p5.textSize(26);\n      p5.text(\n        `${id}`,\n        Rebase(base.x) - normalized.x / 1.25,\n        Rebase(base.y) - normalized.y / 1.25\n      );\n      /*\n      p5.text(\n        `${id}`, //`${id} = [${vec.x.toPrecision(4)}, ${vec.y.toPrecision(4)}]`,\n        Rebase(base.x) +\n          Math.abs(normalized.x / 2.0) * 1.5 +\n          normalized.x / 2.0,\n        Rebase(base.y) - Math.abs(normalized.y / 2.0) * 1.5 + normalized.y / 2.0\n      );*/\n    }\n\n    p5.strokeWeight(2);\n    p5.background(255);\n    p5.line(0, 0, canvasSize.x, 0);\n    p5.line(0, 0, 0, canvasSize.y);\n    p5.line(0, canvasSize.y, canvasSize.x, canvasSize.y);\n    p5.line(canvasSize.x, 0, canvasSize.x, canvasSize.y);\n    p5.strokeWeight(1);\n    p5.line(canvasSize.x / 2, 0, canvasSize.x / 2, canvasSize.y);\n    p5.line(0, canvasSize.y / 2, canvasSize.x, canvasSize.y / 2);\n    p5.strokeWeight(15);\n    p5.point(canvasSize.x / 2, canvasSize.y / 2);\n\n    forces.forEach((item) => {\n      if (parseFloat(item.module) !== 0 && !isNaN(parseFloat(item.module)))\n        drawArrow(\n          p5.createVector(\n            parseFloat(item.posX) + furthest / 2.0,\n            -parseFloat(item.posY) + furthest / 2.0\n          ),\n          p5.createVector(parseFloat(item.fx), -parseFloat(item.fy)),\n          item.id,\n          1.5\n        );\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Calculateur de moment de force en 2D</h1>\n      <h2>\n        Le moment de force de ce système est de{\" \"}\n        {parseFloat(moment).toPrecision(4)} N•unité\n      </h2>\n      <h2>\n        R = {resultante.fx.toPrecision(4)}i + {resultante.fy.toPrecision(4)}j\n      </h2>\n      <div className=\"container my-3\">\n        <div className=\"row mx-auto\">\n          <Force\n            className=\"col-2\"\n            key=\"Force R\"\n            force={resultante}\n            update={UpdateForce}\n            remove={RemoveForce}\n            clone={CloneForce}\n            readOnly={true}\n          />\n          <Sketch\n            className=\"ml-auto\"\n            style={{\n              minWidth: canvasSize.x,\n              maxWidth: canvasSize.x,\n            }}\n            setup={setup}\n            draw={draw}\n          />\n        </div>\n      </div>\n      <div className=\"container my-3\">\n        <div className=\"row mx-auto\">\n          <Form style={{ maxWidth: \"18rem\", minWidth: \"18rem\" }}>\n            <Form.Group>\n              <Form.Label>Moment initial</Form.Label>\n              <FormControl\n                type=\"text\"\n                name=\"module\"\n                aria-label=\"Large\"\n                aria-describedby=\"inputGroup-sizing-sm\"\n                value={momentInitial}\n                onChange={HandleChangeMoment}\n              />\n            </Form.Group>\n          </Form>\n          <Button\n            className=\"ml-auto\"\n            style={{\n              minWidth: canvasSize.x,\n              maxWidth: canvasSize.x,\n            }}\n            onClick={AddForce}\n          >\n            Ajouter Force\n          </Button>\n        </div>\n      </div>\n      <CardDeck\n        className=\"row flex-nowrap col-10 mx-auto\"\n        style={{ margin: \"1.5rem\", overflow: \"auto\" }}\n      >\n        {forces.map((force, i) => {\n          return (\n            <Force\n              style={{ margin: \"5rem\" }}\n              key={i}\n              force={forces[i]}\n              update={UpdateForce}\n              remove={RemoveForce}\n              clone={CloneForce}\n            />\n          );\n        })}\n      </CardDeck>\n      {/*}\n      <Button onClick={AddMoment}>Ajouter Moment</Button>\n      <CardDeck\n        className=\"row flex-nowrap col-10 mx-auto\"\n        style={{ margin: \"1.5rem\", overflow: \"auto\" }}\n      >\n        {moments.map((moment, i) => {\n          return (\n            <Moment\n              style={{ margin: \"5rem\" }}\n              key={count.value}\n              moment={moments[i]}\n              update={UpdateMoment}\n              remove={RemoveMoment}\n            />\n          );\n        })}\n      </CardDeck>\n      {*/}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}